{{ if (.Values).rollout -}}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{ else -}}
apiVersion: apps/v1
kind: Deployment
{{ end -}}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  {{ if ((.Values).rollout).strategy -}}
    strategy:
{{ toYaml .Values.rollout.strategy | indent 4 }}
  {{ end -}}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        workerType: {{ .Values.workerType }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
      - image: ghcr.io/elastic-ipfs/bitswap-peer/app:{{ .Values.image.version }}
        name: {{ .Release.Name }}        
        env: 
        - name: PORT
          value: {{ .Values.service.targetPort | squote }} 
        {{- range .Values.env }} ## TODO: Find out if possible doing without 'range' through array
        - name: {{ .name }}
          value: {{ .value }}
        {{- end }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        {{ if (((.Values.service.http).healthCheck).enable) -}}
        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ .Values.service.http.port }} 
          initialDelaySeconds: {{ .Values.service.http.healthCheck.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.service.http.healthCheck.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.service.http.port }} 
          initialDelaySeconds: {{ .Values.service.http.healthCheck.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.service.http.healthCheck.readiness.periodSeconds }}
        {{ end -}}
