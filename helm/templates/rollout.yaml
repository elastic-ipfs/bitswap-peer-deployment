apiVersion: apps/v1
{{ if (.Values.alpha).rollout -}}
kind: Rollout
{{ else -}}
kind: Deployment
{{ end -}}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        workerType: {{ .Values.workerType }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
      - image: ghcr.io/elastic-ipfs/bitswap-peer/app:{{ .Values.image.version }}
        name: {{ .Release.Name }}        
        env: 
        - name: PORT
          value: {{ .Values.service.targetPort | squote }} 
        - name: NODE_ENV
          value: {{ .Values.env.nodeEnv }}        
        - name: LOG_LEVEL
          value: {{ .Values.env.logLevel }}     
        - name: PEER_ID_S3_BUCKET
          value: {{ .Values.env.peerIdS3Bucket }}
        - name: PEER_ID_FILE
          value: {{ .Values.env.peerIdFileName }}
        - name: CACHE_BLOCK_DATA
          value: {{ .Values.env.cacheBlockData | squote }}
        - name: CACHE_BLOCK_INFO
          value: {{ .Values.env.cacheBlockInfo | squote }}
        - name: PEER_ANNOUNCE_ADDR
          value: {{ .Values.env.peerAnnounceAddr | squote }}
        - name: CONCURRENCY
          value: {{ .Values.env.concurrency | squote }}
        - name: PIPELINING
          value: {{ .Values.env.pipelining | squote }}
        - name: DYNAMO_BLOCKS_TABLE
          value: {{ .Values.env.dynamodbBlocksTable | squote }}
        - name: DYNAMO_CARS_TABLE
          value: {{ .Values.env.dynamodbCarsTable | squote }}
        {{ if ((.Values.env).dynamodbBlocksTableV1) -}}
        - name: DYNAMO_BLOCKS_TABLE_V1
          value: {{ .Values.env.dynamodbBlocksTableV1 | squote }}
        {{ end -}}
        {{ if ((.Values.env).dynamodbCarsTableV1) -}}
        - name: DYNAMO_CARS_TABLE_V1
          value: {{ .Values.env.dynamodbCarsTableV1 | squote }}
        {{ end -}}
        {{ if ((.Values.env).dynamodbLinkTableV1) -}}
        - name: DYNAMO_LINK_TABLE_V1
          value: {{ .Values.env.dynamodbLinkTableV1 | squote }}
        {{ end -}}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        {{ if (((.Values.service.http).healthCheck).enable) -}}
        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ .Values.service.http.port }} 
          initialDelaySeconds: {{ .Values.service.http.healthCheck.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.service.http.healthCheck.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.service.http.port }} 
          initialDelaySeconds: {{ .Values.service.http.healthCheck.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.service.http.healthCheck.readiness.periodSeconds }}
        {{ end -}}
